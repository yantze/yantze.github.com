<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vastiny</title>
    <description>Always with you.
</description>
    <link>http://vastiny.com/</link>
    <atom:link href="http://vastiny.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 Nov 2015 00:43:43 +0800</pubDate>
    <lastBuildDate>Wed, 18 Nov 2015 00:43:43 +0800</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>拍照基础知识</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;发掘手机照相的能力-基础知识篇&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;The basic goal of proper photography is to make your objects and subjects look as natural and neutral as possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-1&quot;&gt;白平衡&lt;/h3&gt;
&lt;p&gt;白平衡，字面上的理解是白色的平衡。&lt;/p&gt;

&lt;p&gt;在日光灯的房间里拍摄的影像会显得发绿，在室内钨丝灯光下拍摄出来的景物就会偏黄，而在日光阴影处拍摄到的照片则莫名其妙地偏蓝&lt;/p&gt;

&lt;p&gt;当一种光线中，三原色成分比例相同，称之为消色，黑、白、灰、金和银所反射的光都是消色。&lt;/p&gt;

&lt;p&gt;白平衡就是那个让所有事物在反射到你眼睛和摄像机时，HSV（色度、饱和度、纯度）与事物原本的样子相同的一个衡量标准之一，其中最主要的影响是色温(色度)。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;色温&lt;/h4&gt;
&lt;p&gt;色温，就是定量地以开尔文温度（K）来表示色彩。&lt;/p&gt;

&lt;p&gt;正午阳光直射下的色温约为5600K，阴天更接近室内色温3200K。日出或日落时的色温约为2000K，烛光的色温约为1000K。这时我们不难发现一个规律：色温越高，光色越偏蓝；色温越低则偏红。某一种色光比其它色光的色温高时，说明该色光比其它色光偏蓝，反之则偏红；同样，当一种色光比其它色光偏蓝时说明该色光的色温偏高，反之偏低。&lt;/p&gt;

&lt;p&gt;晚霞通红，就是因为其它光在传输到眼前的路上被尘埃挡住了。‘赤、橙、黄、绿、青、蓝、紫’，很明显红色波长较长，携带的温度(能量)较高，‘色温’也较低。其它相反。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;使用情景&lt;/h3&gt;
&lt;p&gt;其实最好就是自动白平衡不自然就换到情景白平衡、再不自然就换到开儿文轮来手动调整。&lt;/p&gt;

&lt;p&gt;或者使用下图的方法：&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;示例&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;户外、光线良好 (most outdoor，well-lit scenes)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用自动白平衡&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;阴凉、云层 (shade, cloud cover)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用情景模式 (preset) ，自动白平衡出现‘偏蓝’或者‘偏冷’&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;心中已有了自己的色彩&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用手动模式，根据自己最真实的色彩去调节&lt;/p&gt;

&lt;h2 id=&quot;exposure&quot;&gt;曝光(exposure)&lt;/h2&gt;
&lt;p&gt;曝光，就是光线通过镜头到达感光器的多少。&lt;/p&gt;

&lt;p&gt;光线穿入皮肤&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;本文图片和技巧来自于：&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://snapsnapsnap.photos/a-beginners-guide-for-manual-controls-in-iphone-photography-white-balance/&quot;&gt;white-balance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://snapsnapsnap.photos/a-beginners-guide-for-manual-controls-in-iphone-photography-exposure/&quot;&gt;exposure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://snapsnapsnap.photos/a-beginners-guide-for-manual-controls-in-iphone-photography-focus/&quot;&gt;focus&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jul 2015 23:24:00 +0800</pubDate>
        <link>http://vastiny.com/photography/2015/07/31/photography-basic.html</link>
        <guid isPermaLink="true">http://vastiny.com/photography/2015/07/31/photography-basic.html</guid>
        
        
        <category>photography</category>
        
      </item>
    
      <item>
        <title>selinux 系统安全介绍</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;中文叙述&lt;/h2&gt;
&lt;p&gt;selinux就是一个强制访问控制系统(Security-Enhanced Linux),一般有两个策略,一个是NSA用的mls(restrict),一个是普通linux的用的targed,默认说的都是targed的策略.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;常用情况&lt;/h3&gt;
&lt;p&gt;#### 新装的apache服务器启动之后,只能本机访问,其它网络不能访问
这个是iptable或者centos7的firewall没有开放80端口.&lt;/p&gt;

&lt;p&gt;if use iptables&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A INPUT -p tcp --dport 80 -j ACCEPT
service iptables save
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or firewall&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;firewall-cmd --zone=dmz --add-port=80/tcp --permanent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;网站可以访问后,但是页面是apache的引导页,不是网站目录下的内容.
如果你在你的网站目录放的是从windows或者网络上拷贝下来的文件,很有可能selinux判断为httpd无权限读取这些文件,导致apache一直指向的是 /var/www/error/noindex.html或者/usr/share/httpd/noindex目录下的内容
有三个解决方法&lt;/p&gt;

&lt;p&gt;第一个是设置selinux的等级&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setenforce 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二个方法是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;给网站目录下的文件设置httpd_sys_content_t域
chcon -t default_t -R /var/www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第三个方法是&lt;/p&gt;

&lt;p&gt;如果你换了一个网站目录,或者想做成一个安装包,还想使用selinux,最好用这个方法.把规则添加给selinux.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;semanage fcontext --add --type httpd_sys_content_t &quot;/www(/.*)?&quot;
semanage fcontext --add --type httpd_sys_content_t &quot;/www/html(/.*)?&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个时候,应该有生成一个policy文件,里面包含了目录相关的权限设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /etc/selinux/targeted/contexts/files/file_contexts.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是时候用restorecon了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;restorecon -Rv /www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个时候系统已经告诉你,已经转换成selinux认可的类型或者域了&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;限制用户对自己文档的不可操作&lt;/h4&gt;
&lt;p&gt;比如说我安排一个日志检查员,我不想让他执行程序,只是想让他看日志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sebool allow_guest_exec_content off
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样,那些默认的账户都是不能执行脚本文件的了.&lt;/p&gt;

&lt;h3 id=&quot;sudo&quot;&gt;一个有sudo权限的人,如何对他进行限制呢&lt;/h3&gt;
&lt;p&gt;当然可以在visudo中有个列表显示这个用户的执行程序名,也可以用这种selinux限制好了规则的方法,这里的restricteduser就是一个拥有sudo权限的账户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;semanage login -a -s user_u restricteduser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里说明一个就是user_u是user_r和user_t的合体,user_r代表的是可以执行哪些程序,user_t代表的是那些程序它有什么权限.
比如说这个用户拥有启动httpd服务的权限,但是他对这个网站的内容确是不可编辑的.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;简明运作&lt;/h3&gt;
&lt;p&gt;selinux是构建在linux系统权限控制之上的一套系统,linux权限控制明显的一个问题就是,只分user/group/other,这个other有很多不同的用户,如果other的权限过大,会导致很多的问题出现.
selinux要的就是,user的权限是整个selinux系统中最小权限的存在.selinux也有一个天生缺陷,就是总有一个GOD可以操控一切.
在redhat系的文件系统中,文件属性后面有个小点或者加号,这个就是selinux和acl的设置:
当文件或者文件夹只使用了selinux context的属性，在ls -l时,文件后面会是一个点,但是使用了setfacl(set file access control lists)后,点号就会变成加号.&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;简单的方法&lt;/h3&gt;
&lt;p&gt;远离这一切,可以直接关闭iptables和selinux,很明显很不安全 :)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl mask firewalld
systemctl stop firewalld  #关闭防火墙(centos7)
iptables -F               #暂时清除所有的规则
service iptables stop     #关闭防火墙(centos6和otherlinux系统)
setenforce 0              #关闭selinux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想从头学起，请看扩展阅读的第一个链接。
更详细的说明，请看我下面的笔记。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;## SELINUX DETAIL
selinux has two policy for targeted and stricted,CentOS apply targeted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# selinux config file:/etc/sysconfig/selinux
$ getenforce
Enforcing/Permissive/Disabled

$ sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注释：
MLS: Multi-LevelSecurity(MLS) and non-MLS&lt;/p&gt;

&lt;p&gt;常用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sestatus -v                 # more detail
sestatus -b                 # display current system soft selinux status
getsebool -a | grep httpd   # same as sestatus -b
semodule -l                 # list all selinux module
ls -l /etc/selinux/targeted/modules/active/modules/ # same as semodule -l


id                          #show cur user context
ls -Z/--context
cp -Z/--context
ps -Z/--context
chcon -t etc_t test.txt
setfiles
restorecon


# SELINUX=enforcing would disable sshd non-22 port access until:
semanage port -a -t ssh_port_t -p tcp 12345

# copy file from other where,can not open by browser
restorecon -R -v /var/www/html

# check httpd_disable_trans, ftpd_anon_write
getsebool ftpd_anon_write
getsebool httpd_disable_trans
# httpd_disable_trans is off,we could open it by:
setsebool httpd_disable_trans=1
# or just:
setsebool httpd_disable_trans on
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;advance&quot;&gt;Advance&lt;/h1&gt;
&lt;p&gt;## Basic
system_u:object_r:locale_t:s0
- Each Linux user account maps to an SELinux user
- the root user that owns the file is mapped to the system_u SELinux user. This mapping is done by the SELinux policy.
- In Linux, a user runs a process. This can be as simple as the user jo opening a document in the vi editor (it will be jo’s account running the vi process) or a service account running the httpd daemon. In the SELinux world, a process (a daemon or a running program) is called a subject.
- An object in SELinux is anything that can be acted upon. This can be a file, a directory, a port, a tcp socket, the cursor, or perhaps an X server. The actions that a subject can perform on an object are the subject’s permissions.
- third section,This is the part that defines what type the file or directory belongs to.
- The fourth part of the security context, s0, has to do with multilevel security or MLS. Basically this is another way of enforcing SELinux security policy, and this part shows the sensitivity of the resource (s0)&lt;/p&gt;

&lt;p&gt;SELinux Users are suffixed by “u”, roles are suffixed by “r” and types (for files) or domains (for processes) are suffixed by “_t”.&lt;/p&gt;

&lt;h3 id=&quot;permernet-store&quot;&gt;Permernet store&lt;/h3&gt;
&lt;p&gt;chcon is a temporary measure, a file system relabel or running the restorecon command will revert the file back to its original context.
But if you don’t know the file’s correct context, how does the system know which context to apply when it runs restorecon?
Conveniently, SELinux “remembers” the context of every file or directory in the server. In CentOS 7, contexts of files already existing in the system are listed in the /etc/selinux/targeted/contexts/files/file_contexts file. It’s a large file and it lists every file type associated with every application supported by the Linux distribution. Contexts of new directories and files are recorded in the /etc/selinux/targeted/contexts/files/file_contexts.local file.&lt;/p&gt;

&lt;h2 id=&quot;the-selinux-domain&quot;&gt;the SELinux domain&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cat /etc/selinux/targeted/contexts/files/file_contexts


&amp;gt;[root@fly files]# ll -h
total 1.7M
-rw-r--r--. 1 root root 346K Dec 26 02:52 file_contexts
-rw-------. 1 root root 1.3M Dec 26 02:52 file_contexts.bin
-rw-r--r--. 1 root root  13K Dec 26 02:52 file_contexts.homedirs
-rw-------. 1 root root  42K Dec 26 02:52 file_contexts.homedirs.bin
-rw-r--r--. 1 root root    0 Dec 16 23:31 file_contexts.local
-rw-------. 1 root root   16 Dec 26 02:52 file_contexts.local.bin
-rw-r--r--. 1 root root    0 Dec 16 23:30 file_contexts.subs
-rw-r--r--. 1 root root  435 Dec 16 23:30 file_contexts.subs_dist
-rw-r--r--. 1 root root  139 Dec 16 23:30 media
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;two-step-process&quot;&gt;two-step process&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;semanage fcontext --add --type httpd_sys_content_t &quot;/www(/.*)?&quot;
semanage fcontext --add --type httpd_sys_content_t &quot;/www/html(/.*)?&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tips:if show&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;semanage: command not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you may install full selinux distribution&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install policycoreutils policycoreutils-python selinux-policy selinux-policy-targeted libselinux-utils setroubleshoot-server setools setools-console mcstrans
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To make sure, we can check the file context database (note that we are using the file_contexts.local file):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /etc/selinux/targeted/contexts/files/file_contexts.local You should see the updated contexts:

# This file is auto-generated by libsemanage
# Do not edit directly.
/www(/.*)?    system_u:object_r:httpd_sys_content_t:s0
/www/html(/.*)?    system_u:object_r:httpd_sys_content_t:s0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, we will run the restorecon command. This will relabel the file or directory with what’s been recorded in the previous step:
There is a nifty tool called matchpathcon that can help troubleshoot context-related problems.
matchpathcon -V /www/html/index.html
/www/html/index.html has context unconfined_u:object_r:default_t:s0, should be system_u:object_r:httpd_sys_content_t:s0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;restorecon -Rv /www
matchpathcon -V /www/html/index.html

/www/html/index.html verified.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;domain-transition&quot;&gt;Domain Transition&lt;/h2&gt;
&lt;p&gt;So far we have seen how processes access file system resources. We will now see how processes access other processes.&lt;/p&gt;

&lt;p&gt;This transition is not something the application or the user can control. This has been stipulated in the SELinux policy that loads into memory as the system boots. In a non-SELinux server a user can start a process by switching to a more powerful account (provided she or he has the right to do so). In SELinux, such access is controlled by pre-written policies. And that’s another reason SELinux is said to implement Mandatory Access Control.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sesearch -s init_t -t ftpd_exec_t -c file -p execute -Ad The result shows that processes within initt domain can read, get attribute, execute, and open files of ftpdexec_t context:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Found 1 semantic av rules:
   allow init_t ftpd_exec_t : file { read getattr execute open } ;
Next, we check if the binary file is the entrypoint for the target domain ftpd_t:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sesearch -s ftpd_t -t ftpd_exec_t -c file -p entrypoint -Ad And indeed it is so:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Found 1 semantic av rules:
   allow ftpd_t ftpd_exec_t : file { ioctl read getattr lock execute execute_no_trans entrypoint open } ;
And finally, the source domain initt needs to have permission to transition to the target domain ftpdt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sesearch -s init_t -t ftpd_t -c process -p transition -Ad As we can see below, the source domain has that permission:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Found 1 semantic av rules:
   allow init_t ftpd_t : process transition ;&lt;/p&gt;

&lt;h3 id=&quot;the-selinux-user&quot;&gt;the SELinux user&lt;/h3&gt;
&lt;p&gt;Multi Category Security (MLS / MCS)
SELinux users are defined in the policy that’s loaded into memory at boot time, and there are only a few of these users.
When SELinux is enforced, each regular Linux user account is mapped to an SELinux user account. There can be multiple user accounts mapped to the same SELinux user. This mapping enables a regular account to inherit the permission of its SELinux counterpart.
to seee mapping&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;semanage login -l system_u is a different class of user, meant for running processes or daemons. to see what SELinux users are available in the system

semanage user -l So what this really means is that any Linux user that maps to the unconfined_u user will have the privileges to run any app that runs within the unconfined_t domain. id -Z
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;p&gt;restorecond - daemon that watches for file creation and then sets the default SELinux file context&lt;/p&gt;

&lt;h4 id=&quot;further-reading&quot;&gt;Further Reading:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/an-introduction-to-selinux-on-centos-7-part-2-files-and-processes&quot;&gt;intro selinux by DO&lt;/a&gt;
&lt;a href=&quot;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7-Beta/html/SELinux_Users_and_Administrators_Guide/chap-Security-Enhanced_Linux-Introduction.html&quot;&gt;redhat selinux offical&lt;/a&gt;
&lt;a href=&quot;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/pdf/Security-Enhanced_Linux/Red_Hat_Enterprise_Linux-6-Security-Enhanced_Linux-en-US.pdf&quot;&gt;redhat selinux offical pdf version&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Feb 2015 23:24:00 +0800</pubDate>
        <link>http://vastiny.com/linux/2015/02/02/selinux.html</link>
        <guid isPermaLink="true">http://vastiny.com/linux/2015/02/02/selinux.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>名词解释</title>
        <description>&lt;p&gt;&lt;strong&gt;机会平等规则(Equal Odds Rule)&lt;/strong&gt;
你不可能预测你自己的成功。科学家，艺术家，发明者，作家，企业家，甚至任何人，创造出高价值成果和低价值，甚至无价值成果或项目的机率完全一样。唯一通过刻意练习改进技能的办法就是必须要经过大量的艰苦劳作。在我们看来，机会平等规则或许并不完美，但结果都是一样：practice more。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;墨菲定律(Murphy’s law)&lt;/strong&gt;
Murphy’s law is an adage or epigram that is typically stated as: Anything that can go wrong, will go wrong.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本福特定律(Benford’s law)&lt;/strong&gt;
以一个城市的所有门牌号为例，有的街道门牌号可能在100多就结束了，有的在500多结束，有的在900多结束。注意到500多结束那条街一定包含了1、10+和100~199这些1开头的门牌号，而不包含9开头的百位数，只包含9及90+的以9开头的数，这样一来明显以1打头的就多于9打头的了。然后对整个城市的所有街道做一个综合，最终就满足本福特定律了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;洞穴寓言&lt;/strong&gt;
有一批人犹如囚徒，世代居住在一个洞穴之中，洞穴有条长长的通道通向外面，人们的脖子和脚被锁住不能环顾，只能面向洞壁。
他们身后有一堆火在燃烧，火和囚徒之间有一些人拿着器物走动、火光将器物变动不居的影像投在囚徒前面的洞壁上。囚徒不能回头，不知道影像的原因，以为这些影子是“实在”，用不同的名字称呼它们并习惯了这种生活。
当某一囚徒偶然挣脱枷锁回头看火时，发现以前所见是影像而非实物;当他继续努力，走出洞口时，眼睛受阳光刺激致使他什么也看不见，只是一片虚无。
他不得不回到洞内，但也追悔莫及，他恨自己看清了一切，因为这给他带来了更多的痛苦。
柏拉图还告诉我们，回到此岸、回到洞内并不可怕，可怕的是当我们洞悉了洞外、认清了彼岸的虚无现实再回到洞内，回到此岸。
洞外虚无;洞内负重，洞外是不辨方向的一片真空，洞内是不可自明的负重前行;……事实上，洞外、洞内尽管轻重各异，但都不可承受。
吴艾的“深呼吸”系列形象地隐喻了这个深刻的寓言，他试图在诘问世人：我们到底应该走出洞穴，还是回到洞穴呢?&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Nov 2014 21:24:00 +0800</pubDate>
        <link>http://vastiny.com/relax/2014/11/01/glossary.html</link>
        <guid isPermaLink="true">http://vastiny.com/relax/2014/11/01/glossary.html</guid>
        
        <category>relax</category>
        
        
        <category>relax</category>
        
      </item>
    
      <item>
        <title>WorkFlow</title>
        <description>&lt;h2 id=&quot;windows-hyper-v--centos&quot;&gt;Windows: Hyper-V + CentOS&lt;/h2&gt;
&lt;p&gt;这篇文章虽然是讲Hyper-V虚拟机的灵活运用，但是里面提到的tmux,samba和一些其它的linux命令很可能会提升你的幸福感.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;应用场景&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;可以做什么&lt;/strong&gt;
- linux:运维，开发所有linux应用，快速搭建LNMP/LAMP，docker等一系列工程，并且可以当作一个工作站，linux的界面都不用开启
- 集群:前段时间，就是用Hyper-V开了三台CentOS做一个solr+nutch+hadoop集群，效果很不错&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不可以&lt;/strong&gt;
- 图形处理，涉及到图形的内容都不擅长，当然也可以做，但是没有其它虚拟机做得好
- linux图形界面不够流畅，图形延时很大(windows图形界面就很流畅)
- 没有usb和声卡功能！&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;架构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Hyper-V&lt;/strong&gt;
配置虚拟交换机三个，wlan(外网)、vlan(内部网)、wifi(无线网)
我把这三个网卡都加载到了centos，网段为(都是系统自动配置)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wlan:192.168.100.0/24 或者 HDCP
vlan:192.168.137.0/24
wifi:DHCP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;网卡的完美搭配
打开网络和共享中心,选择本地网络,属性,共享选项卡,选择共享给vlan这个网卡.
wlan共享给vlan之后的ip地址默认为192.168.137.1&lt;/p&gt;

&lt;p&gt;vlan网卡出现几种异常
vlan连不上网,但是支持DNS解析,用管理员cmd执行:&lt;code&gt;net start sharedaccess&lt;/code&gt;
如果还是不能使用这个功能,尝试打开本地网络的父网卡属性,因特网共享给vlan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows Master的配置&lt;/strong&gt;
hosts:
因为常常ip会变，所以就直接在hosts文件里面配置一下，以后直接用域名就可以访问
192.168.137.131 wess
putty:
通过快捷方式 ` E:\program\shortcut\putty.exe -i d:\Work\ssh\wess.ppk -P 22333 yantze@wess ` 实现无密码自动登录centos&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CentOS&lt;/strong&gt;
zsh:
提供了很多实用的技巧&lt;/p&gt;

&lt;p&gt;tmux:
实现一个putty可以开多个窗口，关闭putty，继续后台执行等强大的功能&lt;/p&gt;

&lt;p&gt;vim:
如果你喜欢，就是一个强大的编辑器&lt;/p&gt;

&lt;p&gt;samba:
windows和centos通过smb协议共享文档，可以通过这个实现IDE编程
samba在linux下配置容易出错，可以参考我的这个配置,&lt;a href=&quot;https://github.com/yantze/dotfiles/blob/master/misc/samba.smb.conf#L300&quot;&gt;链接&lt;/a&gt;
配置好后，执行testparm，测试smb是否正确配置
在Windows资源管理器里面登录的时候，用户名一定要在前面加’&#39;反斜杠,因为Windows用户名的格式是’域\用户名’&lt;/p&gt;

&lt;p&gt;brew:
CentOS居然也可以用brew安装最新的软件&lt;/p&gt;

&lt;p&gt;windows与linux互连:
putty、tmux、vim与xserver通信，使得&lt;a href=&quot;http://www.cnblogs.com/vastiny/tag/route/&quot;&gt;linux与windows共享剪贴板(clipboard)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;应用案例&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;路由&lt;/strong&gt;
多网卡环境不得不说路由的问题！
可以通过route / ip route 操作，我自己之前写过一些关于route的例子,&lt;a href=&quot;http://www.cnblogs.com/vastiny/tag/route/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;docker&lt;/strong&gt;
docker的操作官网都有，操作起来很简洁。
docker本来有一个观念，与vagrant不同就是，docker打算一个程序用一个container！这才能体现出它的简洁之美&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LNMP/LAMP&lt;/strong&gt;
这个就不用多说了，配置好就行了&lt;/p&gt;

&lt;p&gt;mac下的vagrant
mac下的vagrant类似windows下linux上的docker，效果还不错&lt;/p&gt;

&lt;h2 id=&quot;windows&quot;&gt;windows&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;命令行&lt;/strong&gt;
autojump+cmd,正在使用,简单就好
babun，很多的特性，接近linux console风格，软件构成：cmd+cygwin
cmder+autojump，很多的特性，没有babun方便,软件构成：cmd+conmou+cmder+clink+msysgit+mingw&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;注&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Windows8集成Hyper-V，不可以和vitrulBox, VMware等其它虚拟机一起使用&lt;/li&gt;
  &lt;li&gt;启用hyper-V组件就可以使用，因为是系统本来就支持的，性能方面做得很不错&lt;/li&gt;
  &lt;li&gt;通过hyper-V安装CentOS6或者7，试过很多linux发行版，我推荐使用CentOS&lt;/li&gt;
  &lt;li&gt;Hyper-V原生支持PowerShell批量部署&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;屏幕截图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/putty_desktop.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/putty_html.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Aug 2014 11:24:00 +0800</pubDate>
        <link>http://vastiny.com/tools/2014/08/26/workflow.html</link>
        <guid isPermaLink="true">http://vastiny.com/tools/2014/08/26/workflow.html</guid>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>算法之美</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;第一题&lt;/h3&gt;
&lt;p&gt;一个专杀矮人的巨人让10个矮人从低到高排列，每个矮人能看见前面所有比他矮的人。巨人随机把白色或者黑色帽子放在每个矮人头上。矮人看不到自己的帽子。巨人告诉矮人，他将要求每个矮人回答帽子的颜色，从最高的开始。如果谁答错了就杀掉谁。每个矮人都能听见前一个人的回答，但是听不见被杀的声音。该用什么方法才能保证矮人被杀的数量最少，至少能挽救几个人的生命？
粗略答案:&lt;a href=&quot;http://zhidao.baidu.com/question/582794545409870245.html&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;+2014-06-30 17:25
###第二题
王师傅是卖鞋的，一双鞋进价 20 元卖 30 元，顾客来买鞋给了张 50 的，王师傅没有零钱，于是找邻居换了 50 元零钱。
事后邻居发现钱是假的，王师傅又赔了邻居 50 元。
请问：王师傅一共损失了多少钱？
详细答案:&lt;a href=&quot;http://justjavac.com/other/2013/08/11/how-much-money-has-wang-lost.html&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;+2014-07-20 10:22
###第三题
假设有三扇门，其中一扇门后面有奖，还有一个主持人，主持人知道哪扇门后面有奖。
你先随机选择一扇门，然后主持人会帮你打开另外两扇门中的一扇，可以确定的是，打开的这扇门肯定没有奖品。
现在，你有一个改变主意的机会，即在剩下的两扇门中，你可以坚持选择你本来选中的这扇门，也可以改变主意选择另外的一扇门。
问：你改变主意和不改变主意，中奖的概率分别是多少？
详细答案:&lt;a href=&quot;http://www.v2ex.com/t/90960#reply47&quot;&gt;link&lt;/a&gt;
进阶:&lt;a href=&quot;http://www.v2ex.com/t/71793&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;+2014-08-16 18:18:00
###第四“题”
因为是译言网的翻译，所以直接贴它的文章网址吧
这篇文章很不错，总共有十二个问题，都讲得很容易懂，三门的问题这里有最好的解答。
&lt;a href=&quot;http://select.yeeyan.org/view/AhyuChen/357495&quot;&gt;最具争议的12个数学事实&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;+2015-04-16 19:54:48
###第五题
两只青蛙绕操场跳，一只比另一只每次跳的远一点，求相遇时间&lt;/p&gt;

&lt;p&gt;&lt;code&gt;changelog:&lt;/code&gt;
write: 2014-06-11 21:24
add forth questiong: 2014-08-13 22:57&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Aug 2014 02:18:00 +0800</pubDate>
        <link>http://vastiny.com/relax/2014/08/16/concept.html</link>
        <guid isPermaLink="true">http://vastiny.com/relax/2014/08/16/concept.html</guid>
        
        <category>algorithm</category>
        
        <category>lts</category>
        
        
        <category>relax</category>
        
      </item>
    
      <item>
        <title>Vim</title>
        <description>&lt;p&gt;Vim 是个神奇的编辑器，不论编辑哪种语言的代码，总能找到一些插件来提升编码体验。就算是用了挺久的 Vim，也时不时地会听到别人说起一些自己从没用过但是很实用的技巧。会怀念 Sublime Text  功能强大却又容易上手的设计理念。但是从没有一种理由让我换用其它编辑器，因为总会有一个 Vim 插件能够填补你内心深处的不满足。
我的使用原则就是，能用就用，如果有更好的IDE就使用IDE，不要走火入魔就行。
something else;&lt;/p&gt;

&lt;p&gt;最开始接触VIM的时候，听人说VIM很好，就用了一下VIM，看VIM简陋不堪，所以就搁置了几个月，后来看到了&lt;a href=&quot;https://github.com/ruchee/vimrc&quot;&gt;Ruchee&lt;/a&gt;的vim配置文档，他的配置简单容易部署，所以后来在几分钟就建好了一个漂亮的vim编辑器的时候，高效编辑，高度灵活，我就喜欢上了这款编辑器。
下面是我github上&lt;a href=&quot;https://github.com/yantze/vimrc&quot;&gt;vim项目&lt;/a&gt;的一部分说明&lt;/p&gt;

&lt;h4 id=&quot;shortcut&quot;&gt;shortcut&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Ctrl+P          快速查找当前文件夹下所有子目录的文件,ctrl+j/k上下选择文件
:ag             查找当前目录下的所有文件的关键字
,gd             使用YCM的快速查找头文件定义,类似vs中的F12
,ci             注释当前行(可选中)
,cm             块注释(可选中)
key&amp;lt;Tab&amp;gt;        UltiSnip And YCM 可以自动补全，UltiSnip对py，ycm对c好一些
                &amp;lt;c-j/k&amp;gt;上下选择下一个瞄准位
&amp;lt;c-n&amp;gt;&amp;lt;c-j/k&amp;gt;    用&amp;lt;c-n&amp;gt;当前选中的行，用&amp;lt;c-j/k&amp;gt;来移动行的位置(vim-multipe-cursors)
&amp;lt;m-j/k&amp;gt;         用alt/command+j/k移动当前行的位置(功能同上)
&amp;lt;c-n&amp;gt;           不停的选中&amp;lt;c-n&amp;gt;,可以执行多光标编辑
                &amp;lt;c-p&amp;gt;回到前一个,&amp;lt;c-x&amp;gt;放弃当前这个光标到下一个
                其中i,a,I,A可以在insert模式，c,s可以在normal模式，c是清除当前选中的文字
                有个小bug,就是在多光标选中模式下，要先按i或者a这个键，再按I/A
,mt             生成每个语言的ctags文件，可以通过ctrl+]跳转和ctrl+t返回
+/-             +可以扩大选择区域/-相反
,bb /,bn&amp;lt;type char&amp;gt; 按等于号对其或者自定义符号对齐
:Sw             当需要root权限保存时，不用重新打开
:DiffSaved      比较在保存文件之后修改了什么那些内容
:Man glob       查看linux关于glob的man文档(only linux/mac)
:Man glob.php   查看从php.net中访问glob的相关语法和示例(only linux/mac)
K               判断文件类型，自动调用:Man function/command name
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;php&quot;&gt;PHP补全&lt;/h4&gt;
&lt;p&gt;可以使用Ctrl+x,Ctrl+o来补全内容&lt;/p&gt;

&lt;h3 id=&quot;vim&quot;&gt;vim学习&lt;/h3&gt;
&lt;p&gt;如果是初学者，要学会这几个技巧
vim有很多的‘模式’，在normal模式下
jkhl: 这四个键分别代表：下上左右
按字母i，进入insert插入模式，然后就可以输入文字
按ESC键，退出insert进入normal模式
退出要先按英文冒号:然后输入q&lt;/p&gt;

&lt;p&gt;这些是基本的规则，如果要熟练的话，需要做一些高级的练习：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/5426.html&quot;&gt;简明Vim练级攻略&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vim-adventures.com/&quot;&gt;vim游戏&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;一些常用快捷键说明&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/xxx                    查找xxx字符串
,ci                     注释选定行(自动识别文件类型后添加注释)
,n/,p                   切换buffer的标签(因为vim的一个窗口里面有多个buffer)
                        同时设置了新的快捷键F2/F3对应,n/,p
10G                     数字10和大写的G，跳到第十行

:s/^/#                  用&quot;#&quot;注释当前行 ,&quot;:s/&amp;lt;search&amp;gt;/&amp;lt;replace&amp;gt;&quot;
:%s/x/b                 在所有行替换x为b,&quot;:%s/&amp;lt;search&amp;gt;/&amp;lt;replace&amp;gt;&quot;
:2,50s/x/b              在2~50行替换x为b
:.,+3s/x/b              在前行和当前行后面的三行，替换x为b
:set notextmode         这个可以去掉^M这个符号
:set pastetoggle        可以解决在linux命令行复制内容的时候，
                        内容被识别为vim操作和乱序缩进,在我的配置中快捷键为F4

f&amp;lt;char&amp;gt;                 查找当前行的字符
gb                      go browser，光标下如果是url链接，自动用默认浏览器打开链接，
                        如果是选中的字符串，就用浏览器搜索, ,gb是另外一个插件提供的同样功能
gf                      如果光标下是一个文件路径，则可以用vim自动打开这个文件
gd                      找到光标下的标签定义
Ctrl+Tab/Ctrl+Shift+Tab 切换vim标签
Ctrl+w,v/h              在gvim下创建多窗口
Ctrl+h/j/k/l            在gvim下切换多窗口
]p                      和p的功能差不多，但是它会自动调整被粘贴的文本的缩进去适应当前代码的位置
K                       在Man里面查找光标当前所在处的词
Ctrl+X,Ctrl+O           自动补全,ycm占用Ctrl+n/p
zz                      把当前行移到屏幕中间
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-1&quot;&gt;一些不常用但是实用的设置&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;:set display=uhex       这个是用来查看^@这种不可显示的字符，自动转换这些字符为hex进制
                        也可以ga查看当前光标的进制
,16                     转换当前文件为16进制，,r16为恢复，只有十六进制部分修改才有用
:vert command           垂直打开command中的命令,示例 :vert h manpageview
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;tips&quot;&gt;Tips&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;c/c++/objc/objc++   可以使用YCM
路径补全            可以使用YCM
光标定位            &amp;lt;c-o/i&amp;gt;上下选择前一次后一次光标位.
各个语言的补全      看~/.vim/snippets
ctags               可以自行在c/php等头文件建立ctags文件
                    c比如/usr/local/include, php比如pear的包管理中
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;snip&quot;&gt;Snip&lt;/h4&gt;
&lt;p&gt;一旦你输入下面的字符，按Tab键自动补全
&lt;code&gt;
#!
class
html5
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;leaderbuffer&quot;&gt;leader和buffer&lt;/h4&gt;
&lt;p&gt;leader默认是一个按钮，指的是反斜杠’&#39;，不过我在配置中设置成了’,’,减少小指的负担。&lt;/p&gt;

&lt;p&gt;buffer其实就是你当前下面的buffer而已。&lt;/p&gt;

&lt;p&gt;当你了解到了基本的使用方法后，你可以读看看我在.vimrc中的文档，里面有很多详细的技巧，熟悉后能和sublime和notepad++一样顺手。&lt;/p&gt;

&lt;p&gt;当然_vimrc.bundles这个文件里面是需要加载的插件，里面有介绍每个插件是拿来干嘛的，也可以了解一下。&lt;/p&gt;

&lt;p&gt;我之前学习vim的时候，收集到的一些资料，这次重新复习了里面的内容，整理了一下发布了出来，就把它当成中级vim的入门手册吧&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yantze/vimrc/blob/master/VIMdoc.md&quot;&gt;下载地址&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;thanks&quot;&gt;Thanks&lt;/h3&gt;

&lt;p&gt;这份vim配置的所以完成，会如此热爱vim，是看到了ruchee的vimrc的配置,其完善的配置让我感觉vim是如此的简单&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ruchee/vimrc&quot;&gt;ruchee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我也参考了很多的vim配置:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coderhwz/vimfiles&quot;&gt;vimfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/luin/dotfiles&quot;&gt;dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rhyzx/vimrc&quot;&gt;vimrc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前段时间找到了vim的集成配置，功很强大&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vim.spf13.com/&quot;&gt;The Ultimate Vim Distribution&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;初学教程&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://learnvimscriptthehardway.stevelosh.com/&quot;&gt;Learn Vimscript the Hard Way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnbeta.com/articles/185694.htm&quot;&gt;为什么Vim使用HJKL键作为方向键&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Jun 2014 21:24:00 +0800</pubDate>
        <link>http://vastiny.com/tools/2014/06/17/vim.html</link>
        <guid isPermaLink="true">http://vastiny.com/tools/2014/06/17/vim.html</guid>
        
        <category>vim</category>
        
        
        <category>tools</category>
        
      </item>
    
  </channel>
</rss>
